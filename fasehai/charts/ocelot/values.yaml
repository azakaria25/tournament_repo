# Default values for ocelot
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

avp: "fasehai/data/ocelot/test"
dockerAvp: "fasehai/data/docker"

# deploy this chart or not.
enabled: false

replicaCount: <replicaCount>

image:
  repository: tbsazdevacr.azurecr.io/sfda/fasehai/ocelot
  tag: "v1.0.2-feature-gitops-20211220"
  pullPolicy: IfNotPresent

imagePullSecrets:
- name: ocelot-registry-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  annotations:
    # if you are using cloud provider such as azure and you need to get a private load balancer IP
    #service.beta.kubernetes.io/azure-load-balancer-internal: 'true'

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 100M
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: <publicWebHost>
      paths:
      - /<subPath>
  # tls:
  #    - secretName: secret-name
  #      hosts:
  #        - host-dns

dnsSubPath: <subPath>

resources:
  limits:
    cpu: <limits.cpu>
    memory: <limits.memory>
  requests:
    cpu: <requests.cpu>
    memory: <requests.memory>

autoscaling:
  enabled: false
  minReplicas: <autoscaling.minReplicas>
  maxReplicas: <autoscaling.maxReplicas>
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


deployment:
  probes:
    path: /ocelot
    port: http
    initDelay: <deployment.probes.initDelay>
    period: 10

    
config:
  corsOrigins: <config.corsOrigins>
  downstreamScheme: <config.downstreamScheme>
  downstreamHostAndPorts:
    host: <config.downstreamHostAndPorts.host>
    port: <config.downstreamHostAndPorts.port>
    